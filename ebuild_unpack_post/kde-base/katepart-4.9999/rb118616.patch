diff --git a/part/syntax/katehighlight.h b/part/syntax/katehighlight.h
index c2d4397e45d0dcba8fa5e822710cae8ea1643aee..812126758143f0a1fec8debc68f00e3286e033ce 100644
--- a/part/syntax/katehighlight.h
+++ b/part/syntax/katehighlight.h
@@ -169,6 +169,7 @@ class KateHighlighting
     const QString &getIdentifier() const {return identifier;}
     void use();
     void release();
+    void reload();
 
     /**
      * @return true if the character @p c is not a deliminator character
diff --git a/part/syntax/katehighlight.cpp b/part/syntax/katehighlight.cpp
index 7d956e53b0aee2a7fb5a636de18858a736c65ae4..6ad30a8f568dfb86fb27f6b45982a546f7c52dca 100644
--- a/part/syntax/katehighlight.cpp
+++ b/part/syntax/katehighlight.cpp
@@ -755,6 +755,12 @@ void KateHighlighting::release()
     done();
 }
 
+void KateHighlighting::reload()
+{
+  cleanup();
+  init();
+}
+
 /**
  * Initialize a context for the first time.
  */
diff --git a/part/view/kateview.h b/part/view/kateview.h
index 6a522dabe4b1c9c96a8157abfb8716faba049234..ff3dde74b1592f6251eeb8875d735377df5cc970 100644
--- a/part/view/kateview.h
+++ b/part/view/kateview.h
@@ -646,6 +646,8 @@ class KATEPART_TESTS_EXPORT KateView : public KTextEditor::View,
   private Q_SLOTS:
     void slotHlChanged();
 
+    void slotReloadHighlightingFiles();
+
   /**
    * Configuration
    */
diff --git a/part/view/kateview.cpp b/part/view/kateview.cpp
index 5ede57e9af184c1f16098dadccec34211497d15a..1bb78c6585c8539e47bbdec55cee4ae76959f5aa 100644
--- a/part/view/kateview.cpp
+++ b/part/view/kateview.cpp
@@ -691,6 +691,11 @@ void KateView::setupActions()
   if (!m_doc->simpleMode ())
     m_bookmarks->createActions( ac );
 
+  a = ac->addAction("highlighting_reload");
+  a->setText(i18n("Reload highlighting files"));
+  a->setWhatsThis(i18n("Reload all highlighting files that are currently loaded."));
+  connect(a, SIGNAL(triggered()), SLOT(slotReloadHighlightingFiles()));
+
   slotSelectionChanged ();
 
   //Now setup the editing actions before adding the associated
@@ -1922,6 +1927,23 @@ void KateView::slotHlChanged()
   updateFoldingConfig ();
 }
 
+void KateView::slotReloadHighlightingFiles()
+{
+  KateHlManager *manager = KateGlobal::self()->hlManager();
+  manager->resetDynamicCtxs();
+
+  for(int i = 0; i < manager->highlights(); i++)
+  {
+    KateHighlighting *highlighting = manager->getHl(i);
+    highlighting->reload();
+  }
+
+  foreach(KateDocument* doc, KateGlobal::self()->kateDocuments())
+  {
+    doc->makeAttribs();
+  }
+}
+
 int KateView::virtualCursorColumn() const
 {
   return m_doc->toVirtualColumn(m_viewInternal->getCursor());
