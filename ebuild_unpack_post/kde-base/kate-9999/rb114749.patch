diff --git a/kate/app/katemainwindow.h b/kate/app/katemainwindow.h
index 8138dc9f1709852acfd275452ac82285c2fd3631..fe81a01fea72b33d3584578d5e58f9f6f74ad435 100644
--- a/kate/app/katemainwindow.h
+++ b/kate/app/katemainwindow.h
@@ -205,6 +205,7 @@ class KateMainWindow : public KateMDI::MainWindow, virtual public KParts::PartBa
     /**
      * Show quick open
      */
+    void slotPreQuickOpen ();
     void slotQuickOpen ();
     
     void tipOfTheDay();
@@ -277,7 +278,7 @@ class KateMainWindow : public KateMDI::MainWindow, virtual public KParts::PartBa
      * quick open to fast switch documents
      */
     KateQuickOpen *m_quickOpen;
-    
+
     /**
      * keeps track of views
      */
diff --git a/kate/app/katemainwindow.cpp b/kate/app/katemainwindow.cpp
index 01f116bcadab6df2ee410240bff0c20170f1b9c7..e4beda3931d8d71024f3bbf5d06f107b2d26c3c8 100644
--- a/kate/app/katemainwindow.cpp
+++ b/kate/app/katemainwindow.cpp
@@ -318,7 +318,7 @@ void KateMainWindow::setupActions()
   scuts << QKeySequence(Qt::CTRL + Qt::ALT + Qt::Key_O)
         << QKeySequence(Qt::CTRL + Qt::Key_Tab);
   a->setShortcuts(scuts);
-  connect( a, SIGNAL(triggered()), this, SLOT(slotQuickOpen()) );
+  connect( a, SIGNAL(triggered()), this, SLOT(slotPreQuickOpen()) );
   a->setWhatsThis(i18n("Open a form to quick open documents."));
 
   KToggleAction* showFullScreenAction = KStandardAction::fullScreen( 0, 0, this, this);
@@ -1019,15 +1019,33 @@ Kate::PluginView *KateMainWindow::pluginView (const QString &name)
   return m_pluginViews.contains(plugin) ? m_pluginViews.value (plugin) : 0;
 }
 
+/**
+ * just wait a little to make sure that user intended to see
+ * a documents list and (still) holds a \c Ctrl key to indicate that...
+ */
+void KateMainWindow::slotPreQuickOpen ()
+{
+  QTimer::singleShot(200, this, SLOT(slotQuickOpen()));
+}
+
+/**
+ * show quick open and pass focus to it if \c Ctrl key still pressed,
+ * otherwise just switch to a previous document quickly!
+ */
 void KateMainWindow::slotQuickOpen ()
 {
-  /**
-   * show quick open and pass focus to it
-   */
   m_quickOpen->update ();
-  m_mainStackedWidget->setCurrentWidget (m_quickOpen);
-  centralWidget()->setFocusProxy (m_quickOpen);
-  m_quickOpen->setFocus ();
+  Qt::KeyboardModifiers mod = QApplication::keyboardModifiers ();
+  if (mod & Qt::ControlModifier)
+  {
+    m_mainStackedWidget->setCurrentWidget (m_quickOpen);
+    centralWidget()->setFocusProxy (m_quickOpen);
+    m_quickOpen->setFocus ();
+  }
+  else
+  {
+    m_quickOpen->justSwitchToPreviousDocument ();
+  }
 }
 
 // kate: space-indent on; indent-width 2; replace-tabs on;
diff --git a/kate/app/katequickopen.h b/kate/app/katequickopen.h
index 175826e27bd097fc19b99915e7fef7d3a469459a..778514a786a457acb3fed4b847ddb61a4357d252 100644
--- a/kate/app/katequickopen.h
+++ b/kate/app/katequickopen.h
@@ -30,11 +30,13 @@
 #include <QPointer>
 #include <qsortfilterproxymodel.h>
 
-class QListView;
-class QTreeView;
-class KLineEdit;
 class KateMainWindow;
+class KLineEdit;
+
+class QListView;
+class QModelIndex;
 class QStandardItemModel;
+class QTreeView;
 
 namespace KTextEditor {
     class Document;
@@ -50,6 +52,11 @@ class KateQuickOpen : public QWidget {
          */
         void update ();
 
+        /**
+         * super fast quick switch
+         */
+        void justSwitchToPreviousDocument ();
+
     protected:
         bool eventFilter(QObject *obj, QEvent *event);
 
@@ -62,6 +69,11 @@ class KateQuickOpen : public QWidget {
          */
         void slotReturnPressed ();
 
+        /**
+         * Switch to a document with given index
+         */
+        void switchTo (const QModelIndex&);
+
     private:
         KateMainWindow *m_mainWindow;
         QTreeView *m_listView;
diff --git a/kate/app/katequickopen.cpp b/kate/app/katequickopen.cpp
index fc01e6d8c4f3c633290d71c63c0fcfc387c2347f..dad8939fbadb8e7eaa28f7381ad464fdeb673158 100644
--- a/kate/app/katequickopen.cpp
+++ b/kate/app/katequickopen.cpp
@@ -270,17 +270,32 @@ void KateQuickOpen::update ()
     m_listView->resizeColumnToContents(0);
 }
 
+/**
+ * just quick switch to a previous document without displaying any list
+ */
+void KateQuickOpen::justSwitchToPreviousDocument ()
+{
+  if (m_model->hasIndex(1, 0)) {
+    switchTo(m_model->index(1, 0));
+  }
+}
+
 void KateQuickOpen::slotReturnPressed ()
 {
+  switchTo(m_listView->currentIndex());
+}
+
+void KateQuickOpen::switchTo (const QModelIndex& index)
+{
   /**
    * open document for first element, if possible
    * prefer to use the document pointer
    */
-  KTextEditor::Document *doc = m_listView->currentIndex().data (DocumentRole).value<QPointer<KTextEditor::Document> >();
+  KTextEditor::Document *doc = index.data(DocumentRole).value<QPointer<KTextEditor::Document> >();
   if (doc) {
     m_mainWindow->mainWindow()->activateView (doc);
   } else {
-    KUrl url = m_listView->currentIndex().data (UrlRole).value<KUrl>();
+    KUrl url = index.data(UrlRole).value<KUrl>();
     if (!url.isEmpty())
       m_mainWindow->mainWindow()->openUrl (url);
   }
